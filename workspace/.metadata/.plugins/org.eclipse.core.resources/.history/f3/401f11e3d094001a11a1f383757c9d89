package basic;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import gnu.io.CommPort;
import gnu.io.CommPortIdentifier;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.SerialPort;
import gnu.io.UnsupportedCommOperationException;

public class SerialArduinoLEDTest {
	public SerialArduinoLEDTest(){
		
	}
	public void connect(String portName){
		try {
			
			CommPortIdentifier comportIdentifier = 
					CommPortIdentifier.getPortIdentifier(portName);
			if(comportIdentifier.isCurrentlyOwned()){
				System.out.println("포트 사용할 수 없습니다.");
			}else{
				System.out.println("포트 사용 가능");
			
				CommPort commPort = comportIdentifier.open("basic_serial",3000);
				if(commPort instanceof SerialPort){
					System.out.println("SerialPort");
				
					//통신에 필요한 값들을 셋팅하려고 캐스팅
					SerialPort serialPort = (SerialPort)commPort;
					//SerialPort에 대한 설명
					serialPort.setSerialPortParams(9600, SerialPort.DATABITS_8,
							SerialPort.STOPBITS_1,
							SerialPort.PARITY_NONE);
					InputStream in = serialPort.getInputStream();
					OutputStream out =serialPort.getOutputStream();
					//데이터를 주고받는 작업은 여기에
					//안드로이드에서 입력받은 값을 아두이노로 전송하는 쓰레드
					new SerialLEDArduinoWriterThread(out).start();
				}else{
					System.out.println("SerialPort만 작업할 수 있습니다.");
				}
			}
		} catch (NoSuchPortException e) {
			e.printStackTrace();
		} catch (PortInUseException e) {
			e.printStackTrace();
		} catch (UnsupportedCommOperationException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	public static void main(String[] args) {
		new SerialConnectionTest().connect("COM10");
	}

}
